name: Go Lint & Test Coverage

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: Run golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m

  format:
    name: Check Go Formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Check gofmt
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go files are not formatted. Run 'gofmt -w .' to fix them."
            exit 1
          fi

  test:
    name: Run Tests & Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Run Tests with Coverage
        run: |
          go test -coverprofile=coverage.out -v ./server/...
          go tool cover -func=coverage.out

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v4
        with:
          file: coverage.out
          flags: unittests
          fail_ci_if_error: true
